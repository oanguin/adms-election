{"version":3,"sources":["logo.svg","GraphClient.js","Settings.js","Question1.js","listItems.js","Question2.js","Question3.js","Question4.js","Question5.js","Question6.js","Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","src_GraphClient","GraphClient","_this","this","Object","classCallCheck","UpdateSettings","url","user","password","CreateDriver","driver","neo4j","auth","basic","session","PrintSettings","console","log","GetAllUkParties","run","GetAllUkAreas","GetPartyWithMostVotesInArea","ukarea","concat","GetPartiesContestedInArea","GetWinningParty","GetPartiesWhomContested","GetPartiesWhomLostDeposit","party","GetAllWhomHaveLostDeposit","Settings","props","possibleConstructorReturn","getPrototypeOf","call","UpdateNeo4JSettings","_this$state","state","Neo4JUrl","User","Password","_this2","_this$props","react_default","a","createElement","noValidate","autoComplete","TextField_default","required","id","label","defaultValue","margin","onChange","e","setState","target","value","type","Button_default","variant","color","onClick","Component","WinningPartyDiv","winningParty","className","properties","leader","Question1","handleChange","event","setActiveStatus","defineProperty","name","GetPartyWithMostVotes","then","result","records","get","constituencies","SelectClass","classNames","selectList","Select_default","autoWidth","MenuItem_default","map","constituency","index","key","mainListItems","ListItem_default","button","data-index","ListItemIcon_default","Settings_default","ListItemText_default","primary","QuestionAnswerSharp_default","secondaryListItems","PartiesDiv","parties","Paper_default","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","component","scope","low","Question2","length","Question3","Question4","Question4_PartiesDiv","Question5","results","Question5_PartiesDiv","Question6","Question6_PartiesDiv","Dashboard","open","currentMenuItem","active","handleDrawerOpen","handleDrawerClose","handleOnMenuItemClick","menuItem","parentElement","getAttribute","parseInt","classes","SettingsClass","visible","hidden","Question1Class","Question2Class","Question3Class","Question4Class","Question5Class","Question6Class","Progress","progress-bar","root","CssBaseline_default","AppBar_default","position","appBar","appBarShift","Toolbar_default","disableGutters","toolbar","IconButton_default","aria-label","menuButton","menuButtonHidden","Menu_default","Typography_default","noWrap","title","CircularProgress_default","Drawer_default","paper","drawerPaper","drawerPaperClose","toolbarIcon","ChevronLeft_default","Divider_default","List_default","content","appBarSpacer","src_Settings","src_Question1","src_Question2","src_Question3","src_Question4","src_Question5","src_Question6","React","withStyles","theme","display","paddingRight","objectSpread","alignItems","justifyContent","padding","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","marginRight","flexGrow","whiteSpace","overflowX","spacing","unit","breakpoints","up","height","overflow","chartContainer","tableContainer","h5","marginBottom","Boolean","window","location","hostname","match","ReactDOM","render","src_Dashboard","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eeaa4d2b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { v1 as neo4j } from 'neo4j-driver';\n\nclass GraphClient{\n    \n    constructor(){\n        this.url = \"bolt://localhost:7687\";\n        this.user = \"neo4j\";\n        this.password = \"neo4jpass\";\n        this.CreateDriver();\n    }\n\n    \n    UpdateSettings = (url, user, password) =>{\n        this.url = url;\n        this.user = user;\n        this.password = password;\n        this.CreateDriver();\n    }\n\n    CreateDriver = () =>{\n        this.driver = neo4j.driver(this.url, neo4j.auth.basic(this.user, this.password));\n        this.session = this.driver.session();\n    }\n\n    PrintSettings =() => {\n        console.log(this.url, this.user, this.password);\n    }\n\n    GetAllUkParties = function(){\n        return this.session.run(\n            'MATCH (p:Ukparty) RETURN p'\n            );\n    }\n\n    GetAllUkAreas = () => {\n        return this.session.run(\n            'MATCH (c:Ukconst) RETURN DISTINCT c.ukarea ORDER BY c.ukarea'\n        );\n    }\n\n    GetPartyWithMostVotesInArea = (ukarea) =>{\n        return this.session.run(\n            `MATCH (ukc:Ukconst{ukarea:\"${ukarea}\"})-[result:Ukresult]->(ukp:Ukparty) with max(result.ukvotes) ` +\n            `as maxvotes MATCH (ukc:Ukconst{ukarea:\"${ukarea}\"})-[result:Ukresult]->(ukp:Ukparty) ` +\n            `WHERE maxvotes = result.ukvotes RETURN ukp`\n        );\n        \n    }\n\n    GetPartiesContestedInArea = (ukarea) =>{\n        return this.session.run(\n            `MATCH (ukc:Ukconst{ukarea:\"${ukarea}\"})-[result:Ukresult]->(ukp:Ukparty) RETURN ukp.party, result.ukvotes ORDER BY result.ukvotes DESC`\n        );\n        \n    }\n\n    GetWinningParty = () =>{\n        return this.session.run(\n          \"MATCH (ukc:Ukconst)-[result:Ukresult]->(ukp:Ukparty) WITH max(result.ukvotes) as maxvotes, ukc.ukarea as votesinarea \" +\n          \"MATCH (ukc1:Ukconst)-[result1:Ukresult]->(ukp1:Ukparty) WITH ukp1.party as winningParty WHERE result1.ukvotes = maxvotes \" +\n          \"RETURN winningParty,count(winningParty) as winningCount ORDER BY winningCount DESC LIMIT 1\"\n        );\n    }\n\n    GetPartiesWhomContested = () =>{\n        return this.session.run(\n            \"MATCH (ukc:Ukconst)-[result:Ukresult]->(ukp:Ukparty) WITH max(result.ukvotes) as maxvotes, ukc.ukarea as votesinarea \" +\n            \"MATCH (ukc1:Ukconst)-[result1:Ukresult]->(ukp1:Ukparty) WITH ukp1.party as winningParty WHERE result1.ukvotes = maxvotes \" +\n            \"WITH collect({party:winningParty}) as winningparties MATCH (ukp:Ukparty) WITH winningparties  + \" + \n            \"collect({party:ukp.party}) as allparties UNWIND allparties as party RETURN party.party as party, count(party) -1 as seatswon ORDER BY seatswon DESC\"\n        );\n    }\n\n    GetPartiesWhomLostDeposit = (party) =>{\n        return this.session.run(\n            `MATCH (ukc:Ukconst)-[result:Ukresult]->(ukp:Ukparty{party:\\\"${party}\\\"}) ` + \n            `WHERE (result.ukvotes/(ukc.ukelectors * 1.0) * 100 < 5) WITH ` +\n            `collect({area:ukc.ukarea,party:ukp.party,votes:result.ukvotes,percentOfVotes:result.ukvotes/(ukc.ukelectors * 1.0) * 100}) as tallies ` +\n            `UNWIND tallies as tally RETURN tally.party as party, tally.percentOfVotes as percentofvotes, tally.area as area ` +\n            `ORDER BY percentofvotes`\n        );\n    }\n\n    GetAllWhomHaveLostDeposit = () =>{\n        return this.session.run(\n            `MATCH (ukc:Ukconst)-[result:Ukresult]->(ukp:Ukparty) WHERE (result.ukvotes/(ukc.ukelectors * 1.0) * 100 < 5) ` +\n            `WITH collect({area:ukc.ukarea,party:ukp.party,votes:result.ukvotes,percentOfVotes:result.ukvotes/(ukc.ukelectors * 1.0) * 100}) as tallies ` +\n            `UNWIND tallies as tally RETURN tally.party as party, tally.percentOfVotes as percentofvotes, tally.area as area ` +\n            `ORDER BY party, area, percentofvotes`\n        );\n    }\n    \n}\n\nexport default new GraphClient();","import React, { Component } from 'react';\nimport './App.css';\nimport { v1 as neo4j } from 'neo4j-driver';\nimport GraphClient from './GraphClient'\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\n\nclass Settings extends Component{\n    constructor(props){\n        super(props);\n        this.state = { Neo4JUrl: props.Neo4JUrl,User: props.User, Password:props.Password }\n    }\n\n    UpdateNeo4JSettings = () =>{        \n        const {Neo4JUrl, User, Password} = this.state;        \n        GraphClient.UpdateSettings(Neo4JUrl, User, Password);\n    }\n\n    render(){\n        const {Neo4JUrl, User, Password} = this.props;\n        return(\n            <form  noValidate autoComplete=\"off\">\n                    <TextField\n                    required\n                    id=\"url\"\n                    label=\"Required\"\n                    defaultValue=\"bolt://localhost:7687\"\n                    margin=\"normal\"\n                    onChange={e => this.setState({ Neo4JUrl: e.target.value })}\n                    />\n                    <br/>\n                    <TextField\n                    required\n                    id=\"user\"\n                    label=\"Required\"\n                    defaultValue=\"neo4j\"\n                    margin=\"normal\"\n                    onChange={e => this.setState({ User: e.target.value })}\n                    />\n                    <br/>\n                    <TextField\n                    id=\"standard-password-input\"\n                    label=\"Password\"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    defaultValue=\"neo4jpass\"\n                    margin=\"normal\"\n                    onChange={e => this.setState({ Password: e.target.value })}\n                    />\n                    <br/>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.UpdateNeo4JSettings}>\n                        Save Settings\n                    </Button>\n                \n            </form>\n        );\n    }\n}\n\nexport default Settings;\n","import React, { Component } from 'react';\nimport GraphClient from './GraphClient';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles } from '@material-ui/core';\nimport AppScss from './App.scss';\nimport classNames from 'classnames';\nimport Button from '@material-ui/core/Button';\n\nclass Question1 extends Component{\n    constructor(props){\n        super(props);\n        this.state = {constituencies : [], ukarea:\"\", winningParty: {}};\n    }\n\n    componentDidMount(){\n        this.props.setActiveStatus(true);\n        GraphClient.GetAllUkAreas().then(\n            result =>{\n                this.setState({constituencies:result.records}, () =>{\n                    this.props.setActiveStatus(false);\n                });\n            }\n        )\n    }\n\n    handleChange = event => {\n        this.props.setActiveStatus(true);\n        this.setState({ [event.target.name]: event.target.value }, () =>{\n            this.GetPartyWithMostVotes();\n        });\n        \n    };\n\n    GetPartyWithMostVotes = () =>{\n        const {ukarea} = this.state;\n        GraphClient.GetPartyWithMostVotesInArea(ukarea).then(\n            result =>{\n                if( result.records[0]){\n                    this.setState({ winningParty: result.records[0].get('ukp')},this.props.setActiveStatus(false));\n                }\n                \n            }\n        )\n    };\n\n    render(){\n        const {constituencies, ukarea, winningParty} = this.state;\n        var SelectClass = classNames({\n            'selectList': true\n          });\n        return(        \n            <div>\n                <h1>Question 1</h1>\n                <h2><i>Select UK Area to see which party won in that area.</i></h2>\n                <Select \n                className={SelectClass}\n                value={ukarea}\n                onChange={this.handleChange}\n                name=\"ukarea\"\n                autoWidth={true}>\n                    <MenuItem value=\"\">\n                        <em>None</em>\n                    </MenuItem>\n                    {constituencies.map((constituency,index) =>{\n                        const ukarea = constituency.get('c.ukarea')\n                        return(\n                            <MenuItem value={ukarea} key={ukarea}>{ukarea}</MenuItem>\n                        )\n                    })}\n                </Select>\n\n                {\n                    (winningParty && winningParty.properties) ?\n                    <WinningPartyDiv winningParty={winningParty}/>\n                    :<div className=\"resultsDiv\"><h2>Sorry No Results</h2></div>\n                }\n            </div>\n            )\n    }\n}\n\nfunction WinningPartyDiv(props){\n    const {winningParty} = props;\n    return(\n        <div className=\"resultsDiv\">\n            <h2>Winning Party</h2>\n            <div>Party: {winningParty.properties.party}</div>\n            <div>Party Leader: {winningParty.properties.leader}</div>        \n        </div>\n    )\n}\n\nexport default Question1;","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport QuestionAnswerSharp from '@material-ui/icons/QuestionAnswerSharp';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\nexport const mainListItems = (\n  <div>\n    <ListItem button data-index=\"1\">\n      <ListItemIcon data-index=\"1\">\n        <SettingsIcon data-index=\"1\"/>\n      </ListItemIcon>\n      <ListItemText primary=\"Settings\" data-index=\"1\"/>\n    </ListItem>\n    <ListItem button data-index=\"2\">\n      <ListItemIcon data-index=\"2\">\n        <QuestionAnswerSharp data-index=\"2\"/>\n      </ListItemIcon>\n      <ListItemText primary=\"Question 1\" data-index=\"2\"/>\n    </ListItem>\n    <ListItem button data-index=\"3\">\n      <ListItemIcon data-index=\"3\">\n        <QuestionAnswerSharp data-index=\"3\"/>\n      </ListItemIcon>\n      <ListItemText primary=\"Question 2\" data-index=\"3\"/>\n    </ListItem>\n    <ListItem button data-index=\"4\">\n      <ListItemIcon data-index=\"4\">\n        <QuestionAnswerSharp data-index=\"4\"/>\n      </ListItemIcon>\n      <ListItemText primary=\"Question 3\" data-index=\"4\"/>\n    </ListItem>\n    <ListItem button data-index=\"5\">\n      <ListItemIcon data-index=\"5\">\n        <QuestionAnswerSharp data-index=\"5\"/>\n      </ListItemIcon>\n      <ListItemText primary=\"Question 4\" data-index=\"5\"/>\n    </ListItem>\n    <ListItem button data-index=\"6\">\n      <ListItemIcon data-index=\"6\">\n        <QuestionAnswerSharp data-index=\"6\"/>\n      </ListItemIcon>\n      <ListItemText primary=\"Question 5\" data-index=\"6\"/>\n    </ListItem>\n    <ListItem button data-index=\"7\">\n      <ListItemIcon data-index=\"7\">\n        <QuestionAnswerSharp data-index=\"7\"/>\n      </ListItemIcon>\n      <ListItemText primary=\"Question 6\" data-index=\"7\"/>\n    </ListItem>\n  </div>\n);\n\nexport const secondaryListItems = (\n  <div>\n  </div>\n);","import React, { Component } from 'react';\nimport GraphClient from './GraphClient';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles } from '@material-ui/core';\nimport AppScss from './App.scss';\nimport classNames from 'classnames';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nclass Question2 extends Component{\n    constructor(props){\n        super(props);\n        this.state = {constituencies : [], ukarea:\"\", parties: []};\n    }\n\n    componentDidMount(){\n        this.props.setActiveStatus(true);\n        GraphClient.GetAllUkAreas().then(\n            result =>{\n                this.setState({constituencies:result.records},this.props.setActiveStatus(false));\n            }\n        )\n    }\n\n    handleChange = event => {\n        this.props.setActiveStatus(true);\n        this.setState({ [event.target.name]: event.target.value }, () =>{\n            this.GetPartiesContestedInArea();\n        });\n        \n    };\n\n    GetPartiesContestedInArea = () =>{\n        const {ukarea} = this.state;\n        console.log(ukarea)\n        GraphClient.GetPartiesContestedInArea(ukarea).then(\n            result =>{\n                if( result.records){\n                    this.setState({ parties: result.records},this.props.setActiveStatus(false));\n                    console.log(\"Parties\",result)\n                }\n                \n            }\n        )\n    };\n\n    render(){\n        const {constituencies, ukarea, parties} = this.state;\n        var SelectClass = classNames({\n            'selectList': true\n          });\n        return(        \n            <div>\n                <h1>Question 2</h1>\n                <h2><i>Select UK Area to see which parties contested the constituency.</i></h2>\n                <Select \n                className={SelectClass}\n                value={ukarea}\n                onChange={this.handleChange}\n                name=\"ukarea\"\n                autoWidth={true}>\n                    <MenuItem value=\"\">\n                        <em>None</em>\n                    </MenuItem>\n                    {constituencies.map((constituency,index) =>{\n                        const ukarea = constituency.get('c.ukarea')\n                        return(\n                            <MenuItem value={ukarea} key={ukarea}>{ukarea}</MenuItem>\n                        )\n                    })}\n                </Select>\n\n                {\n                    (parties && parties.length > 0) ?\n                    <PartiesDiv parties={parties}/>\n                    :<div className=\"resultsDiv\"><h2>Sorry No Results</h2></div>\n                }\n            </div>\n            )\n    }\n}\n\nfunction PartiesDiv(props){\n    const {parties} = props;\n    return(\n        <div className=\"resultsDiv\">\n        <Paper >\n        <Table>\n            <TableHead>\n            <TableRow>\n                <TableCell>Party</TableCell>\n                <TableCell align=\"right\">Votes</TableCell>\n            </TableRow>\n            </TableHead>\n            <TableBody>\n            {parties.map(party => (\n                <TableRow key={party.get('ukp.party')}>\n                <TableCell component=\"th\" scope=\"row\">\n                    {party.get('ukp.party')}\n                </TableCell>\n                <TableCell align=\"right\">{party.get('result.ukvotes').low}</TableCell>\n                </TableRow>\n            ))}\n            </TableBody>\n        </Table>\n        </Paper>\n        </div>\n    )\n}\n\nexport default Question2;","import React, { Component } from 'react';\nimport GraphClient from './GraphClient';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles } from '@material-ui/core';\nimport AppScss from './App.scss';\nimport classNames from 'classnames';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nclass Question3 extends Component{\n    constructor(props){\n        super(props);\n        this.state = { winningParty: \"\"};\n    }\n\n    componentDidMount(){\n        this.props.setActiveStatus(true);\n        GraphClient.GetWinningParty().then(          \n            result =>{\n                this.setState({winningParty:result.records[0].get('winningParty')},this.props.setActiveStatus(false));\n            }\n        )\n    }\n\n    render(){\n        const {winningParty} = this.state;\n        return(        \n            <div>\n                <h1>Question 3</h1>\n                <h2><i>Winning Party.</i></h2>\n                <div><h3>{winningParty}</h3></div>\n            </div>\n            )\n    }\n}\n\nexport default Question3;","import React, { Component } from 'react';\nimport GraphClient from './GraphClient';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles } from '@material-ui/core';\nimport AppScss from './App.scss';\nimport classNames from 'classnames';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nclass Question4 extends Component{\n    constructor(props){\n        super(props);\n        this.state = { parties: []};\n    }\n\n    componentDidMount(){\n        this.props.setActiveStatus(true);\n        GraphClient.GetPartiesWhomContested().then(          \n            result =>{\n                this.setState({parties:result.records},this.props.setActiveStatus(false))\n            }\n        )\n    }\n\n    render(){\n        const {parties} = this.state;\n        return(        \n            <div>\n                <h1>Question 4</h1>\n                <h2><i>Parties Whom Contested the election and the votes they recived.</i></h2>\n                {\n                    (parties && parties.length > 0) ?\n                    <PartiesDiv parties={parties}/>\n                    :<div className=\"resultsDiv\"><h2>Sorry No Results</h2></div>\n                }\n            </div>\n            )\n    }\n}\n\nfunction PartiesDiv(props){\n    const {parties} = props;\n    return(\n        <div className=\"resultsDiv\">\n        <Paper >\n        <Table>\n            <TableHead>\n            <TableRow>\n                <TableCell>Party</TableCell>\n                <TableCell align=\"right\">Constituencies Won</TableCell>\n            </TableRow>\n            </TableHead>\n            <TableBody>\n            {parties.map(party => (\n                <TableRow key={party.get('party')}>\n                <TableCell component=\"th\" scope=\"row\">\n                    {party.get('party')}\n                </TableCell>\n                <TableCell align=\"right\">{party.get('seatswon').low}</TableCell>\n                </TableRow>\n            ))}\n            </TableBody>\n        </Table>\n        </Paper>\n        </div>\n    )\n}\n\nexport default Question4;","import React, { Component } from 'react';\nimport GraphClient from './GraphClient';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles } from '@material-ui/core';\nimport AppScss from './App.scss';\nimport classNames from 'classnames';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nclass Question5 extends Component{\n    constructor(props){\n        super(props);\n        this.state = {results:[], parties: [], party:\"\"};\n    }\n\n    componentDidMount(){\n        this.props.setActiveStatus(true);\n        GraphClient.GetAllUkParties().then(\n            result =>{\n                this.setState({parties:result.records},this.props.setActiveStatus(false));\n            }\n        )\n    }\n\n    handleChange = event => {\n        this.props.setActiveStatus(true);\n        this.setState({ [event.target.name]: event.target.value }, () =>{\n            this.GetPartiesWhomLostDeposit(event.target.value);\n        });\n        \n    };\n\n    GetPartiesWhomLostDeposit = (party) =>{\n        const {ukarea} = this.state;\n        console.log(ukarea)\n        GraphClient.GetPartiesWhomLostDeposit(party).then(\n            result =>{\n                if( result.records){\n                    this.setState({ results: result.records},this.props.setActiveStatus(false));\n                }\n                \n            }\n        )\n    };\n\n    render(){\n        const {results, parties, party} = this.state;\n        var SelectClass = classNames({\n            'selectList': true\n          });\n        return(        \n            <div>\n                <h1>Question 5</h1>\n                <h2><i>Select UK Area to see which parties lost their deposit.</i></h2>\n                <Select \n                className={SelectClass}\n                value={party}\n                onChange={this.handleChange}\n                name=\"party\"\n                autoWidth={true}>\n                    <MenuItem value=\"\">\n                        <em>None</em>\n                    </MenuItem>\n                    {parties.map((constituency,index) =>{\n                        const party = constituency.get('p').properties.party\n                        return(\n                            <MenuItem value={party} key={party}>{party}</MenuItem>\n                        )\n                    })}\n                </Select>\n\n                {\n                    (results && results.length > 0) ?\n                    <PartiesDiv parties={results}/>\n                    :<div className=\"resultsDiv\"><h2>Sorry No Results</h2></div>\n                }\n\n            </div>\n            )\n    }\n}\n\nfunction PartiesDiv(props){\n    const {parties} = props;\n    return(\n        <div className=\"resultsDiv\">\n        <Paper >\n        <Table>\n            <TableHead>\n            <TableRow>\n                <TableCell>Area</TableCell>\n                <TableCell align=\"right\">Percent of Votes</TableCell>\n            </TableRow>\n            </TableHead>\n            <TableBody>\n            {parties.map(party => (\n                <TableRow key={party.get('area')}>\n                <TableCell component=\"th\" scope=\"row\">\n                    {party.get('area')}\n                </TableCell>\n                <TableCell align=\"right\">{party.get('percentofvotes')}</TableCell>\n                </TableRow>\n            ))}\n            </TableBody>\n        </Table>\n        </Paper>\n        </div>\n    )\n}\n\nexport default Question5;","import React, { Component } from 'react';\nimport GraphClient from './GraphClient';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles } from '@material-ui/core';\nimport AppScss from './App.scss';\nimport classNames from 'classnames';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nclass Question6 extends Component{\n    constructor(props){\n        super(props);\n        this.state = {results:[]};\n    }\n\n    componentDidMount(){\n        this.props.setActiveStatus(true);\n        GraphClient.GetAllWhomHaveLostDeposit().then(\n            result =>{\n                this.setState({results:result.records},this.props.setActiveStatus(false));\n            }\n        )\n    }\n\n\n    render(){\n        const {results} = this.state;\n        return(        \n            <div>\n                <h1>Question 6</h1>\n                <h2><i>All parties whom have lost their deposts in a particular constituency.</i></h2>\n\n                {\n                    (results && results.length > 0) ?\n                    <PartiesDiv parties={results}/>\n                    :<div className=\"resultsDiv\"><h2>Sorry No Results</h2></div>\n                }\n\n            </div>\n            )\n    }\n}\n\nfunction PartiesDiv(props){\n    const {parties} = props;\n    return(\n        <div className=\"resultsDiv\">\n        <Paper >\n        <Table>\n            <TableHead>\n            <TableRow>\n                <TableCell>Party</TableCell>\n                <TableCell align=\"left\">Area</TableCell>\n                <TableCell align=\"left\">Percent of Votes</TableCell>\n            </TableRow>\n            </TableHead>\n            <TableBody>\n            {parties.map((party,index) => (\n                <TableRow key={index}>\n                <TableCell component=\"th\" scope=\"row\">\n                    {party.get('party')}\n                </TableCell>\n                <TableCell align=\"left\">{party.get('area')}</TableCell>\n                <TableCell align=\"left\">{party.get('percentofvotes')}</TableCell>\n                </TableRow>\n            ))}\n            </TableBody>\n        </Table>\n        </Paper>\n        </div>\n    )\n}\n\nexport default Question6;","import React, { Children } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { mainListItems, secondaryListItems } from './listItems';\nimport Settings from './Settings';\nimport Question1 from './Question1';\nimport Question2 from './Question2';\nimport Question3 from './Question3';\nimport Question4 from './Question4';\nimport Question5 from './Question5';\nimport Question6 from './Question6';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AppScss from './App.scss';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing.unit * 7,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing.unit * 9,\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  chartContainer: {\n    marginLeft: -22,\n  },\n  tableContainer: {\n    height: 320,\n  },\n  h5: {\n    marginBottom: theme.spacing.unit * 2,\n  },\n});\n\nclass Dashboard extends React.Component {\n  state = {\n    open: true,\n    currentMenuItem: 1,\n    active: true\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleOnMenuItemClick = (event) => {\n    var menuItem = event.target.parentElement.getAttribute(\"data-index\") ? event.target.parentElement : event.target;\n    const currentMenuItem = parseInt(menuItem.getAttribute(\"data-index\"));\n\n    this.setState({currentMenuItem:currentMenuItem })\n  };\n\n  setActiveStatus = (active) =>{\n    console.log('Setting State', active)\n    this.setState({active:active});\n  }\n\n  render() {\n    const { classes } = this.props;\n    var SettingsClass = classNames({\n        'visible': this.state.currentMenuItem === 1,\n        'hidden': this.state.currentMenuItem !== 1\n      });\n    var Question1Class = classNames({\n        'visible': this.state.currentMenuItem === 2,\n        'hidden': this.state.currentMenuItem !== 2\n      });\n    var Question2Class = classNames({\n        'visible': this.state.currentMenuItem === 3,\n        'hidden': this.state.currentMenuItem !== 3\n      });\n    var Question3Class = classNames({\n        'visible': this.state.currentMenuItem === 4,\n        'hidden': this.state.currentMenuItem !== 4\n      });\n    var Question4Class = classNames({\n        'visible': this.state.currentMenuItem === 5,\n        'hidden': this.state.currentMenuItem !== 5\n      });\n    var Question5Class = classNames({\n        'visible': this.state.currentMenuItem === 6,\n        'hidden': this.state.currentMenuItem !== 6\n      });\n    var Question6Class = classNames({\n        'visible': this.state.currentMenuItem === 7,\n        'hidden': this.state.currentMenuItem !== 7\n      });\n    var Progress = classNames({\n        'visible': this.state.active,\n        'hidden': !this.state.active,\n        'progress-bar': true\n      });\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"absolute\"\n          className={classNames(classes.appBar, this.state.open && classes.appBarShift)}\n        >\n          <Toolbar disableGutters={!this.state.open} className={classes.toolbar}>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerOpen}\n              className={classNames(\n                classes.menuButton,\n                this.state.open && classes.menuButtonHidden,\n              )}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.title}\n            >\n              Advance Data Management - Course Work 4 - <i>By: Oneal Anguin</i>\n              <div className={Progress}>\n                <CircularProgress className={Progress} />\n              </div>\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: classNames(classes.drawerPaper, !this.state.open && classes.drawerPaperClose),\n          }}\n          open={this.state.open}\n        >\n          <div className={classes.toolbarIcon}>\n            <IconButton onClick={this.handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <List onClick={this.handleOnMenuItemClick}>{mainListItems}</List>\n          <Divider />\n          <List>{secondaryListItems}</List>\n        </Drawer>\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <div className={SettingsClass}>\n                <Settings className={classes.content} Neo4JUrl={\"bolt://localhost:7687\"} User={\"neo4j\"} Password={\"neo4jpass\"}/>\n          </div>\n          <div className={Question1Class}>\n            <Question1 setActiveStatus={this.setActiveStatus}/>\n          </div>\n          <div className={Question2Class}>\n            <Question2 setActiveStatus={this.setActiveStatus}/>\n          </div>\n          <div className={Question3Class}>\n            <Question3 setActiveStatus={this.setActiveStatus}/>\n          </div>\n          <div className={Question4Class}>\n            <Question4 setActiveStatus={this.setActiveStatus}/>\n          </div>\n          <div className={Question5Class}>\n            <Question5 setActiveStatus={this.setActiveStatus}/>\n          </div>\n          <div className={Question6Class}>\n            <Question6 setActiveStatus={this.setActiveStatus}/>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Dashboard);","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport Settings from './Settings'\nimport Question1 from './Question1'\nimport './App.css';\nimport './Dashboard'\nimport Dashboard from './Dashboard';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {Neo4JUrl: \"http://localhost:8080\", CurrentQuestion: 3}\n  }\n\n  UpdateNeo4JUrl = (event) =>{\n    this.setState({\n      Neo4JUrl: event.target.value\n    });\n  }\n\n  ChangeQuestion = (event) =>{\n    this.setState({\n      CurrentQuestion: parseInt(event.target.value)\n    });\n  }\n\n  ShouldRenderQuestion = (QuestionId) =>{\n    console.log(this.state.CurrentQuestion, QuestionId, QuestionId === this.state.CurrentQuestion);\n    return QuestionId === this.state.CurrentQuestion;\n  }\n\n  render() {\n    const {Neo4JUrl, CurrentQuestion} = this.state;\n    return (\n      <div className=\"App\">\n        <Dashboard/>\n        <Settings Neo4JUrl={Neo4JUrl} UpdateNeo4JUrl={this.UpdateNeo4JUrl}/>\n        <select bind={CurrentQuestion} value={CurrentQuestion} onChange={this.ChangeQuestion}>\n          <option value=\"1\">Question 1</option>\n          <option value=\"2\">Question 2</option>\n          <option value=\"3\">Question 3</option>\n          <option value=\"4\">Question 4</option>\n        </select>\n        {this.ShouldRenderQuestion(1) && <Question1/>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Dashboard from './Dashboard'\n\nReactDOM.render(<Dashboard />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}